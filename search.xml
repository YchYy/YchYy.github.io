<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>整除分块</title>
      <link href="/2025/01/11/%E6%95%B4%E9%99%A4%E5%88%86%E5%9D%97/"/>
      <url>/2025/01/11/%E6%95%B4%E9%99%A4%E5%88%86%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>数论分块可以快速计算一些含有除法向下取整的和式<br>（即形如 $\sum_{i=1}^nf(i)g(\left\lfloor\dfrac ni\right\rfloor)$ 的和式）<br>我们可以观察一下$\left\lfloor\dfrac ni\right\rfloor$的值是如何变化的，举个例子$\left\lfloor\dfrac {10}i\right\rfloor$，当$i$从1到10，$\left\lfloor\dfrac {10}i\right\rfloor$的值为 $10,5,3,2,2,1,1,1,1,1$，我们发现，当$i \in [5, 10]$ 时，其值均为 $1$。也就是这一段区间$\left\lfloor\dfrac ni\right\rfloor$ 的值都是相同的。当我们O(n)从 $1$ 到$n$ 枚举 $i$ 时，会发现有很多像上述所说的相同值，能不能将相同的部分一起计算呢？</p><p>整除分块可以做到将值相同的区间右端点快速算出，这样对于每一段都能O(1)的算出这一段整体的值。<br>我们从 $1$ 到 $n$ 枚举 $i$，值为 $\left\lfloor\dfrac ni\right\rfloor$的区间右端点为$\left\lfloor\dfrac n{\lfloor\frac ni\rfloor}\right\rfloor$ 总体时间复杂度$O(\sqrt{n})$<br>例如上述例子，$\left\lfloor\dfrac {10}i\right\rfloor$，当 $i = 5$ 时，$\left\lfloor\dfrac {10}i\right\rfloor = 2$，$\left\lfloor\dfrac n{\lfloor\frac {10}5\rfloor}\right\rfloor = 10$，能快速的找到值为 $2$ 的区间右端点，这样我们就可以一步到位的计算所有重复值。</p><p>时间复杂度证明：<br>对于值相同的每一段，计算时间复杂度是O(1)的，那么我们的时间复杂度只与段数有关。<br>当 $\left\lfloor\dfrac ni\right\rfloor \leq \sqrt{n}$ 时，一共 $\sqrt{n}$ 段；<br>当 $\left\lfloor\dfrac ni\right\rfloor \geq \sqrt{n}$ 时，$i \leq \frac{n}{\sqrt{n}}$ , $i$ 的取值一共 $\sqrt{n}$ 种。<br>所以总时间复杂度为 $O\sqrt{n}$<br>代码实现如下<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> ans = <span class="number">0</span>; <span class="comment">// 答案</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> l = <span class="number">1</span>; l &lt;= n; l++) &#123;</span><br><span class="line">    <span class="type">int</span> r = n / (n / i);    <span class="comment">// 区间右端点</span></span><br><span class="line">    ans += <span class="built_in">cal</span>(l, r); <span class="comment">//计算这一区间的值</span></span><br><span class="line">    l = r;    <span class="comment">// 直接跳到下一个区间</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><br><a href="https://www.luogu.com.cn/problem/UVA11526">题目链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 整除分块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/01/11/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97/"/>
      <url>/2025/01/11/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>矩阵运算</title>
      <link href="/2025/01/11/%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97/"/>
      <url>/2025/01/11/%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><p>前提条件：只有当第一个矩阵的列数与第二个矩阵的行数相同时，才能进行乘法运算<br>运算规则：矩阵 a $\times$ 矩阵 b = 矩阵 ans，$ans<em>{ij} = \sum</em>{k=1} a<em>{ik} \times b</em>{kj}$<br><a href="https://www.luogu.com.cn/problem/B2105">题目链接</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>, mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line"><span class="type">int</span> a[N][N], r, c;</span><br><span class="line"><span class="built_in">node</span> () &#123;<span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);&#125;</span><br><span class="line"></span><br><span class="line">node <span class="keyword">operator</span> * (<span class="type">const</span> node &amp;w) <span class="type">const</span> &#123;</span><br><span class="line">node res;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= r; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= w.c; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> kk = <span class="number">1</span>; kk &lt;= c; kk++) &#123;</span><br><span class="line">res.a[i][j] += a[i][kk] * w.a[kk][j];</span><br><span class="line"><span class="comment">// cout &lt;&lt; a[i][kk] &lt;&lt; &quot; &quot; &lt;&lt; w.a[kk][j] &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">node a, b;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) cin &gt;&gt; a.a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">a.r = n; a.c = m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; j++) cin &gt;&gt; b.a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">b.r = m; b.c = k;</span><br><span class="line"></span><br><span class="line">node res = a * b;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++, cout &lt;&lt; endl) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; j++, cout &lt;&lt; <span class="string">&quot; &quot;</span>) &#123;</span><br><span class="line"><span class="comment">// for (int kk = 1; kk &lt;= m; kk++) &#123;</span></span><br><span class="line"><span class="comment">// c[i][j] += a[i][kk] * b[kk][j];</span></span><br><span class="line"><span class="comment">// &#125; </span></span><br><span class="line">cout &lt;&lt; res.a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="矩阵快速幂"><a href="#矩阵快速幂" class="headerlink" title="矩阵快速幂"></a>矩阵快速幂</h3><p>根据乘法的结合律，我们可知 $A^n = A^{n/2} \times A^{n/2}$<br>根据这个性质，对于求 $A^n$ 我们可以用快速幂以 $log(n)$ 的复杂度快速求出<br>具体实现可以参考数字的快速幂<br><a href="https://www.luogu.com.cn/problem/P3390">题目链接</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>, mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Matrix</span> &#123;</span><br><span class="line">    <span class="type">int</span> a[N][N]&#123;&#125;, n, m;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Matrix</span>() &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Matrix</span>(<span class="type">int</span> _n, <span class="type">int</span> _m) &#123;</span><br><span class="line">        n = _n; m = _m;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">Matrix</span>(<span class="type">int</span> _n) &#123;</span><br><span class="line">        n = _n; m = _n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) a[i][i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Matrix <span class="keyword">operator</span>+(<span class="type">const</span> Matrix &amp;w) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="function">Matrix <span class="title">res</span><span class="params">(n, m)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">                res.a[i][j] = a[i][j] + w.a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Matrix <span class="keyword">operator</span>*(<span class="type">const</span> Matrix &amp;w) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="function">Matrix <span class="title">res</span><span class="params">(n, w.m)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= w.m; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= m; k++) &#123;</span><br><span class="line">                    (res.a[i][j] += a[i][k] * w.a[k][j] % mod) %= mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a;</span><br><span class="line">        a = a * a;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">qmi</span><span class="params">(Matrix a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="function">Matrix <span class="title">res</span><span class="params">(a.n)</span></span>; <span class="comment">// </span></span><br><span class="line">    <span class="keyword">while</span>(b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a; </span><br><span class="line">        a = a * a;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line">    <span class="function">Matrix <span class="title">a</span><span class="params">(n, n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            cin &gt;&gt; a.a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Matrix res = <span class="built_in">qmi</span>(a, m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            cout &lt;&lt; res.a[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="矩阵快速幂加速递推"><a href="#矩阵快速幂加速递推" class="headerlink" title="矩阵快速幂加速递推"></a>矩阵快速幂加速递推</h3><p>根据递推式子，构造矩阵，使用矩阵快速幂加速<br><a href="https://www.luogu.com.cn/problem/P1939">题目链接</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>, mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Matrix</span>&#123;</span><br><span class="line">    <span class="type">int</span> a[N][N]&#123;&#125;, n, m;</span><br><span class="line">    Matrix <span class="keyword">operator</span>* (<span class="type">const</span> Matrix &amp;w) <span class="type">const</span>&#123;</span><br><span class="line">        Matrix res;</span><br><span class="line">        res.n = n;</span><br><span class="line">        res.m = w.m;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= w.m; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= m; k++) &#123;</span><br><span class="line">                    res.a[i][j] += a[i][k] * w.a[k][j] % mod;</span><br><span class="line">                    res.a[i][j] %= mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">qmi</span><span class="params">(Matrix a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    Matrix res;</span><br><span class="line">    res.n = <span class="number">3</span>; res.m = <span class="number">3</span>;</span><br><span class="line">    res.a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>; res.a[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">0</span>; res.a[<span class="number">1</span>][<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">    res.a[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">0</span>; res.a[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>; res.a[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">    res.a[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">0</span>; res.a[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">0</span>; res.a[<span class="number">3</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a;</span><br><span class="line">        a = a * a;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Matrix a, b;</span><br><span class="line">    a.n = <span class="number">1</span>; a.m = <span class="number">3</span>;</span><br><span class="line">    a.a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>; a.a[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>; a.a[<span class="number">1</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    b.n = <span class="number">3</span>; b.m = <span class="number">3</span>;</span><br><span class="line">    b.a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>; b.a[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">0</span>; b.a[<span class="number">1</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">    b.a[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>; b.a[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">0</span>; b.a[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">    b.a[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">0</span>; b.a[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">1</span>; b.a[<span class="number">3</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        cout &lt;&lt; (a * <span class="built_in">qmi</span>(b, n - <span class="number">1</span>)).a[<span class="number">1</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="高斯消元"><a href="#高斯消元" class="headerlink" title="高斯消元"></a>高斯消元</h3><p>求解多元一次方程组的解<br><a href="https://www.luogu.com.cn/problem/P2455">题目链接</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> eps = <span class="number">1e-9</span>;</span><br><span class="line"><span class="type">double</span> a[N][N], ans[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> c = <span class="number">1</span>; c &lt;= n; c++) &#123;</span><br><span class="line">        <span class="type">int</span> t = r;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][c]) &gt; <span class="built_in">fabs</span>(a[t][c])) t = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[t][c]) &lt;= eps) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">swap</span>(a[t], a[r]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r + <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="type">double</span> p = a[i][c] / a[r][c];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = c; j &lt;= n + <span class="number">1</span>; j++) &#123;</span><br><span class="line">                a[i][j] -= a[r][j] * p;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        r++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (r &lt;= n) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt;= n; i ++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][n + <span class="number">1</span>]) &gt; eps) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        a[i][n + <span class="number">1</span>] /= a[i][i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">            a[j][n + <span class="number">1</span>] -= a[j][i] * a[i][n + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;x&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">2</span>) &lt;&lt; a[i][n + <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="矩阵求逆"><a href="#矩阵求逆" class="headerlink" title="矩阵求逆"></a>矩阵求逆</h3><p>概念： 类似于一个数的逆元。只有方阵才有逆矩阵，一个方阵 $A$ 的逆是 $A^{-1}$，那么有如下几个性质：<br>    $A \times A^{-1} = I$<br>    $B \times A^{-1} = C \Rightarrow C \times A = B$<br>算法原理：<br>$ A^{-1} \times [AI] = [IA^{-1}] $<br>所以我们只需要将 $[AI]$ 的左边转成$[I]$那么右边的就是 $[A^{-1}]$<br><a href="https://www.luogu.com.cn/problem/P4783">题目链接</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">410</span>, mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> a[N][N * <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % mod;</span><br><span class="line">        a = a * a % mod;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">        a[i][i + n] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> r = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> c = <span class="number">1</span>; c &lt;= n; c++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!a[r][r])</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r + <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i][r]) &#123;</span><br><span class="line">                <span class="built_in">swap</span>(a[r], a[i]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[r][r] == <span class="number">0</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No Solution&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> p = <span class="built_in">qmi</span>(a[r][r], mod - <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt;= n + n; i++) &#123;</span><br><span class="line">            a[r][i] *= p;</span><br><span class="line">            a[r][i] %= mod;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r + <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = n + n; j &gt;= r; j--) &#123;</span><br><span class="line">                a[i][j] -= a[r][j] * a[i][r] % mod;</span><br><span class="line">                a[i][j] += mod;</span><br><span class="line">                a[i][j] %= mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        r++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = n + n; k &gt;= i; k--) &#123;</span><br><span class="line">                a[j][k] -= a[i][k] * a[j][i] % mod;</span><br><span class="line">                a[j][k] += mod;</span><br><span class="line">                a[j][k] %= mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = n + <span class="number">1</span>; j &lt;= n + n; j++) &#123;</span><br><span class="line">            cout &lt;&lt; a[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 矩阵 </tag>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组合数学</title>
      <link href="/2025/01/11/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
      <url>/2025/01/11/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h3 id="O-N-2-求组合数-C-m-n"><a href="#O-N-2-求组合数-C-m-n" class="headerlink" title="O(N^2) 求组合数 $C^m_n$"></a>O(N^2) 求组合数 $C^m_n$</h3><p>根据$C_n^m &#x3D; C_{n-1}^m + C_{n-1}^{m-1}$<br>初始化$C_i^0 &#x3D; 1$，然后开始递推即可</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++ )</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i; j ++ )</span><br><span class="line">        <span class="keyword">if</span> (!j) c[i][j] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> c[i][j] = (c[i - <span class="number">1</span>][j] + c[i - <span class="number">1</span>][j - <span class="number">1</span>]) % mod;</span><br></pre></td></tr></table></figure><h3 id="O-N-求组合数"><a href="#O-N-求组合数" class="headerlink" title="$O(N)$求组合数"></a>$O(N)$求组合数</h3><p>根据$C_n^m &#x3D; \frac{n!}{m! \times (n - m)!}$<br>O(n)预处理出阶乘以及阶乘的逆元，每次求 $C_n^m$ 均为O(1)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fact[<span class="number">0</span>] = infact[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 快速幂求逆元</span></span><br><span class="line">infact[N - <span class="number">1</span>] = <span class="built_in">qmi</span>(infact[N - <span class="number">1</span>], mod - <span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i ++ ) &#123;</span><br><span class="line">    fact[i] = fact[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以类比于除法去考虑</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = N - <span class="number">2</span>; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">    infact[i] = infact[i + <span class="number">1</span>] * (i + <span class="number">1</span>) % mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="卢卡斯定理求组合数"><a href="#卢卡斯定理求组合数" class="headerlink" title="卢卡斯定理求组合数"></a>卢卡斯定理求组合数</h3><p>卢卡斯定理：若p是质数，则对于任意整数 $1 \leq m \leq n$，有：<br>$C_n^m &#x3D; C_{n \bmod p}^{m \bmod p} \times C_{n &#x2F; p}^{m &#x2F; p} \pmod p $<br>当题目中发现，模数是质数，并且 $p \leq n$ 时，可使用卢卡斯定理。</p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 组合数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>约数</title>
      <link href="/2025/01/11/%E7%BA%A6%E6%95%B0/"/>
      <url>/2025/01/11/%E7%BA%A6%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="约数个数"><a href="#约数个数" class="headerlink" title="约数个数"></a>约数个数</h3><p>定理：一个数分解质因数为：$p_1^{c_1} \times p_2^{c_2} \times p_3^{c_3} \times … \times p_k^{c_k}$，那么该数的约数个数等于 $(c_1 + 1) \times (c_2 + 1) \times (c_3 + 1) \times … \times (c_k + 1)$</p><p>证明：对于该数的约数，一定是 $p_1^{d_1} \times p_2^{d_2} \times p_3^{d_3} \times … \times p_k^{d_k}$, $1 \le d_i \le c_i$，那么对于 $d_i$，共有 $c_i + 1$种方案，再根据乘法原理，共有    $(c_1 + 1) \times (c_2 + 1) \times (c_3 + 1) \times … \times (c_k + 1)$ 个约数</p><h3 id="约数之和"><a href="#约数之和" class="headerlink" title="约数之和"></a>约数之和</h3><p>定理：一个数分解质因数为：$p_1^{c_1} \times p_2^{c_2} \times p_3^{c_3} \times … \times p_k^{c_k}$，那么该数的约数之和等于 $(p_1^0 + p_1^1 + … + p_1^{c_1}) \times (p_2^0 + p_2^1 + … + p_2^{c_2}) \times … \times (p_k^0 + p_k^1 + … + p_k^{c_k})$</p><p>证明：原理与证明约数个数类似</p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 约数 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>质因数分解</title>
      <link href="/2025/01/11/%E8%B4%A8%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3/"/>
      <url>/2025/01/11/%E8%B4%A8%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>试除法<br>时间复杂度O($\sqrt x$), x 是数的大小</p><h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> x;    <span class="comment">// 对 x 进行质因数分解</span></span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(x); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(x % i == <span class="number">0</span>) &#123;</span><br><span class="line">                x /= i;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>) cout &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><p>筛法，对 n 个数进行质因数分解<br>时间复杂度O(Nlog(X))，N是数的个数，X是数的范围<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">get_primes</span>(n); <span class="comment">// 埃氏筛或线性筛，处理出每个数的最小值质因数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x, last = <span class="number">-1</span>, cnt = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">while</span>(x != <span class="number">1</span>) &#123; <span class="comment">// v[x] 是处理出来的x的最小质因数</span></span><br><span class="line">            <span class="keyword">if</span> (v[x] != last) &#123;</span><br><span class="line">                <span class="keyword">if</span> (last != <span class="number">-1</span>) </span><br><span class="line">                    cout &lt;&lt; last &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">                cnt = <span class="number">0</span>;</span><br><span class="line">                last = v[x];</span><br><span class="line">            &#125;</span><br><span class="line">            cnt++;</span><br><span class="line">            x /= v[x];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; last &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 数论 </tag>
            
            <tag> 质数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>状压dp</title>
      <link href="/2025/01/11/%E7%8A%B6%E5%8E%8Bdp/"/>
      <url>/2025/01/11/%E7%8A%B6%E5%8E%8Bdp/</url>
      
        <content type="html"><![CDATA[<p>dfs版本<br>倒着做<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> sta, <span class="type">int</span> now)</span> </span>&#123; <span class="comment">// sta是当前的状态(二进制)，now是当前的位置</span></span><br><span class="line">    <span class="keyword">if</span> (~dp[sta][now]) <span class="keyword">return</span> dp[sta][now];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sta &gt;&gt; i &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            res = <span class="built_in">min</span>(res, <span class="built_in">dfs</span>(sta ^ (<span class="number">1</span> &lt;&lt; i), i) + (价值));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[sta][now] = res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>正着做<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; (<span class="number">1</span> &lt;&lt; n); i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;&gt; j &amp; <span class="number">1</span>) &#123;</span><br><span class="line">          dp[i] = <span class="built_in">min</span>(dp[i], dp[i ^ (<span class="number">1</span> &lt;&lt; j)] + (价值));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 状压dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数位dp</title>
      <link href="/2025/01/11/%E6%95%B0%E4%BD%8Ddp/"/>
      <url>/2025/01/11/%E6%95%B0%E4%BD%8Ddp/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> pos, <span class="type">int</span> pre, <span class="type">int</span> lead, <span class="type">int</span> limit)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!pos) &#123;</span><br><span class="line">    边界条件</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!limit &amp;&amp; !lead &amp;&amp; dp[pos][pre] != <span class="number">-1</span>) <span class="keyword">return</span> dp[pos][pre];</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>, up = limit ? a[pos] : 无限制位;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= up; i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (不合法条件) <span class="keyword">continue</span>;</span><br><span class="line">        res += <span class="built_in">dfs</span>(pos - <span class="number">1</span>, 未定参数, lead &amp;&amp; !i, limit &amp;&amp; i == up);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> limit ? res : (lead ? res : dp[pos][sum] = res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">-1</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">    len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x) a[++ len] = x % 进制, x /= 进制;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dfs</span>(len, 未定参数, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">cal</span>(r) - <span class="built_in">cal</span>(l - <span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 数位dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>背包问题</title>
      <link href="/2025/01/11/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
      <url>/2025/01/11/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>01背包<br>每个物品要么拿要么不拿<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> f[N], v[N], w[N];</span><br><span class="line"><span class="type">int</span> n, V;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;V);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;v[i], &amp;w[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = V; j &gt;= v[i] ; j--)</span><br><span class="line">            f[j] = <span class="built_in">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class="line">    cout &lt;&lt; f[V];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>完全背包<br>每个物品能拿无限个<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> f[N], v[N], w[N];</span><br><span class="line"><span class="type">int</span> n, V;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;V);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n ;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;v[i], &amp;w[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n ;i ++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = v[i] ; j &lt;= V ; j++)</span><br><span class="line">            f[j] = <span class="built_in">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class="line">    cout &lt;&lt; f[V];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多重背包<br>每个物品有限个<br>时间复杂度O(N$\times$V$\times$S) S = $\sum s_i$<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> n,vv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;vv);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ;i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> v,w,s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;v, &amp;w, &amp;s);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span> ; k &lt;= s ; k++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = vv; j &gt;= v; j--)</span><br><span class="line">             f[j] = <span class="built_in">max</span>(f[j], f[j - v] + w);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[vv];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多重背包<br>时间复杂度O(N$\times$V$\times$log(S)) S = $\sum s_i$<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2010</span>;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> n, v;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;v);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> vv, ww, s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;vv, &amp;ww, &amp;s);</span><br><span class="line">        <span class="keyword">if</span> (s &lt; <span class="number">0</span>) s = -s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= s; j *= <span class="number">2</span>) &#123;</span><br><span class="line">            s -= j;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = v; k &gt;= j * vv; k--) &#123;</span><br><span class="line">                f[k] = <span class="built_in">max</span>(f[k], f[k - j * vv] + j * ww);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = v; k &gt;= s * vv; k--) &#123;</span><br><span class="line">                f[k] = <span class="built_in">max</span>(f[k], f[k - s * vv] + s * ww);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[v] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 背包 </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bitset优化背包</title>
      <link href="/2024/11/09/bitset%E4%BC%98%E5%8C%96%E8%83%8C%E5%8C%85/"/>
      <url>/2024/11/09/bitset%E4%BC%98%E5%8C%96%E8%83%8C%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p>对于 dp 状态，dp数组的值为 bool 类型，表示有无时，可以考虑使用 bitset 优化，时间复杂度可降低64倍。<br>例1：<a href="https://codeforces.com/contest/366/problem/C">https://codeforces.com/contest/366/problem/C</a><br>例2：<a href="https://acm.hdu.edu.cn/showproblem.php?pid=7140">https://acm.hdu.edu.cn/showproblem.php?pid=7140</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bitset </tag>
            
            <tag> 背包 </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jiangly算法模板</title>
      <link href="/2024/11/07/jiangly%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/"/>
      <url>/2024/11/07/jiangly%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/WIDA/p/17633758.html">博客链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分图模板</title>
      <link href="/2024/10/19/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%A8%A1%E6%9D%BF/"/>
      <url>/2024/10/19/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>染色法判断是否是二分图<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y : g[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (col[y]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (col[y] == col[x]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            col[y] = <span class="number">3</span> - col[x];</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">dfs</span>(y)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ...<span class="comment">//输入 输出 建边等</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!col[i]) &#123;</span><br><span class="line">            col[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>二分图最大匹配<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y : g[x]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!v[y]) &#123;</span><br><span class="line">            v[y] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (!match[y] || <span class="built_in">dfs</span>(match[y])) &#123;</span><br><span class="line">                match[y] = x;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">...<span class="comment">// 建边</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 从左边每个点开始，看能不能找到一条增广路</span></span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;<span class="comment">// ans 为最大匹配数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;<span class="comment">// 遍历左部图的每个点</span></span><br><span class="line">        <span class="built_in">memset</span>(v, <span class="number">0</span>, <span class="keyword">sizeof</span> v);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">dfs</span>(i)) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>练习题</p><div class="table-container"><table><thead><tr><th><font size=6>题目</font></th><th><font size=6>类型</font></th></tr></thead><tbody><tr><td><a href="https://www.luogu.com.cn/problem/P3386">【模板】二分图最大匹配</a></td><td>二分图最大匹配【模板】</td></tr><tr><td><a href="https://www.acwing.com/problem/content/374/">棋盘覆盖</a></td><td>二分图最大匹配</td></tr><tr><td><a href="https://www.luogu.com.cn/problem/P10937">車的放置</a></td><td>二分图最大匹配</td></tr><tr><td><a href="https://codeforces.com/gym/105385/problem/H">阻止城堡</a></td><td>二分图最大匹配</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 图论 </tag>
            
            <tag> 二分图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客施工</title>
      <link href="/2024/10/11/%E5%8D%9A%E5%AE%A2%E6%96%BD%E5%B7%A5/"/>
      <url>/2024/10/11/%E5%8D%9A%E5%AE%A2%E6%96%BD%E5%B7%A5/</url>
      
        <content type="html"><![CDATA[<p>跟着 <a href="www.fomal.cc">fomal</a> 大佬的教程进行博客魔改</p><p>目前 博客魔改教程总结(二) 引入iconfont自定义图标</p><div class="table-container"><table><thead><tr><th>暂未完成</th><th>说明</th></tr></thead><tbody><tr><td>评论功能</td><td></td></tr><tr><td>字体设置，字体有点太丑了</td><td></td></tr><tr><td>Pjax</td><td>暂不知道作用</td></tr><tr><td>背景图片</td><td>暂不能换，换了之后就没了</td></tr><tr><td>页脚Github徽标</td><td>后续还需修改</td></tr><tr><td>首页分类磁贴新版(店长)</td><td>弃用，暂用小冰的</td></tr><tr><td>首页分类磁贴 (小冰)</td><td>跳转功能未实现</td></tr><tr><td>自定义字体</td><td>暂未研究创建字体    字体有点难看，优先级较高</td></tr><tr><td>GitCalendar</td><td>github贡献图，暂不需要，后续看看能不能搞一个codeforces的</td></tr><tr><td>侧边栏电子时钟</td><td>未使用</td></tr><tr><td>引入iconfont自定义图标</td><td></td></tr><tr><td>文章双侧栏显示(小冰)首页分类磁贴1.0（小冰）菜单栏多色动态图标</td><td></td></tr><tr><td>Social卡片彩色图标引入</td><td></td></tr><tr><td>wowjs动画文章置顶滚动栏(店长)侧边栏图标和文字自定义</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息竞赛常用网站使用指南</title>
      <link href="/2024/10/10/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2024/10/10/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="信息竞赛常用网站使用指南"><a href="#信息竞赛常用网站使用指南" class="headerlink" title="信息竞赛常用网站使用指南"></a>信息竞赛常用网站使用指南</h1><h2 id="一、洛谷"><a href="#一、洛谷" class="headerlink" title="一、洛谷"></a>一、<a href="https://www.luogu.com.cn/">洛谷</a></h2><h3 id="1-登录"><a href="#1-登录" class="headerlink" title="1.登录"></a>1.登录</h3><p>可以通过搜索洛谷，或者输入网址 <a href="https://www.luogu.com.cn/">https://www.luogu.com.cn/</a> ，进入洛谷主页。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921084730513.png title=洛谷"/></div></div><p>如果有账号，直接登录即可。</p><p>没有的话，点击右上角的注册进行注册（需要使用邮箱）。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921084915017.png title=洛谷"/></div></div><p>根据它的流程注册就好。</p><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921085639128.png title=洛谷"/></div></div><p>毕竟是咱们国家的网站，全是中文，多用用就熟悉了。</p><h2 id="二、codeforces"><a href="#二、codeforces" class="headerlink" title="二、codeforces"></a>二、<a href="https://codeforces.com/">codeforces</a></h2><h3 id="1-登录-1"><a href="#1-登录-1" class="headerlink" title="1.登录"></a>1.登录</h3><p>直接搜索 codeforces（简称cf） 或者输入网址 <a href="https://codeforces.com/">https://codeforces.com/</a> ，进入 codeforces 主页</p><p>点击右上角的 Enter 登录，或者 Register 注册</p><h3 id="2-使用-1"><a href="#2-使用-1" class="headerlink" title="2.使用"></a>2.使用</h3><p>cf的比赛有四个等级，div1 &gt; div2 &gt; div3 &gt; div4，当你分数高了，打低等级的就不加分了。</p><p>个人分数，0~1200 灰名，1200~1400 绿名，1400~1600 青名，1600~1900 蓝名， 1900 ~ 2100 紫名，再往上还有橙名、红名、红黑、黑红。</p><p>比赛时间一般为 22：30 开始（高中及以下不建议打正式赛，多睡觉有助于孩子身体发育），比赛时长2小时+。</p><h4 id="主页"><a href="#主页" class="headerlink" title="主页"></a>主页</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921091227802.png title=codeforces"/></div></div><h4 id="contests"><a href="#contests" class="headerlink" title="contests"></a>contests</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921091917560.png title=codeforces contests"/></div></div> <h4 id="register"><a href="#register" class="headerlink" title="register"></a>register</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921094834271.png title=codeforces contest register"/></div></div> <h4 id="某一场比赛"><a href="#某一场比赛" class="headerlink" title="某一场比赛"></a>某一场比赛</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921092621025.png title=a codeforces' contest"/></div></div> <h5 id="这场比赛的standings"><a href="#这场比赛的standings" class="headerlink" title="这场比赛的standings"></a>这场比赛的standings</h5><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921093408851.png title=a codeforces contest standings"/></div></div> <h4 id="tourist的信息"><a href="#tourist的信息" class="headerlink" title="tourist的信息"></a>tourist的信息</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921094140376.png title=tourist"/></div></div> <h2 id="三、atcoder"><a href="#三、atcoder" class="headerlink" title="三、atcoder"></a>三、<a href="https://atcoder.jp/">atcoder</a></h2><h3 id="1-登录-2"><a href="#1-登录-2" class="headerlink" title="1.登录"></a>1.登录</h3><p>搜索 atcoder 或者，输入网址 <a href="https://atcoder.jp/">https://atcoder.jp/</a></p><p>点击右上角，sign up 注册，sign in 登录</p><h3 id="2-使用-2"><a href="#2-使用-2" class="headerlink" title="2.使用"></a>2.使用</h3><p>atcoder 比赛难度，ABC &lt; ARC &lt; AGC &lt; AHC</p><p>比赛时间一般为 ABC 周六 20：00开始，比赛时长100分钟，周日可能会有其他比赛</p><h4 id="主页-1"><a href="#主页-1" class="headerlink" title="主页"></a>主页</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/953867f6472ec2d4b2fc343297708784.png title=atcoder"/></div></div> <h4 id="某场比赛的报名"><a href="#某场比赛的报名" class="headerlink" title="某场比赛的报名"></a>某场比赛的报名</h4><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921095659641.png title=atcoder contest register"/></div></div> <p>直接下滑到最下面</p><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921095723923.png title=atcoder contest register"/></div></div> <div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240921095907051.png title=atcoder contest register"/></div></div> <h2 id="四、插件（用于codeforces与atcoder翻译）"><a href="#四、插件（用于codeforces与atcoder翻译）" class="headerlink" title="四、插件（用于codeforces与atcoder翻译）"></a>四、插件（用于codeforces与atcoder翻译）</h2><h3 id="1、油猴-tampermonkey"><a href="#1、油猴-tampermonkey" class="headerlink" title="1、油猴 tampermonkey"></a>1、<a href="https://www.tampermonkey.net/">油猴 tampermonkey</a></h3><p>搜索油猴或打开网址 <a href="https://www.tampermonkey.net/">https://www.tampermonkey.net/</a></p><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240923101422986.png title=tampermonkey"/></div></div> <h3 id="2、codeforces-better-用于codeforces翻译"><a href="#2、codeforces-better-用于codeforces翻译" class="headerlink" title="2、codeforces better 用于codeforces翻译"></a>2、<a href="https://greasyfork.org/zh-CN/scripts/465777-codeforces-better#google_vignette">codeforces better</a> 用于codeforces翻译</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="url=https:///ychyy.github.io/images/image-20240923101806485.png title=codeforces better"/></div></div> <h3 id="3、atcoder-better-用于atcoder翻译"><a href="#3、atcoder-better-用于atcoder翻译" class="headerlink" title="3、atcoder better 用于atcoder翻译"></a>3、<a href="https://greasyfork.org/zh-CN/scripts/471106-atcoder-better">atcoder better</a> 用于atcoder翻译</h3><p>操作与codeforces better相同</p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法竞赛基础题题单</title>
      <link href="/2024/10/10/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E9%A2%98%E5%8D%95/"/>
      <url>/2024/10/10/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E9%A2%98%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th><font size=6>题目</font></th><th><font size=6>类型</font></th></tr></thead><tbody><tr><td><font size=5><strong>无向图连通分量</strong></font></td><td></td></tr><tr><td><a href="https://codeforces.com/contest/1986/problem/F">Non-academic Problem</a></td><td>割边板子题</td></tr><tr><td><a href="https://www.acwing.com/problem/content/366/">网络</a></td><td>边双</td></tr><tr><td><a href="https://www.luogu.com.cn/problem/P3388">【模板】割点（割顶）</a></td><td>割点模板</td></tr><tr><td><a href="https://www.luogu.com.cn/problem/P3469">BLO-Blockade</a></td><td>点双</td></tr><tr><td><a href="https://www.luogu.com.cn/problem/SP2878">Knights of the Round Table</a></td><td>点双</td></tr><tr><td><font size=5><strong>二分图</strong></font></td><td></td></tr><tr><td><a href="https://www.luogu.com.cn/problem/P3386">【模板】二分图最大匹配</a></td><td>二分图最大匹配【模板】</td></tr><tr><td><a href="https://www.acwing.com/problem/content/374/">棋盘覆盖</a></td><td>二分图最大匹配</td></tr><tr><td><a href="https://www.luogu.com.cn/problem/P10937">車的放置</a></td><td>二分图最大匹配</td></tr><tr><td><a href="https://codeforces.com/gym/105385/problem/H">阻止城堡</a></td><td>二分图最大匹配</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客文章基础写法</title>
      <link href="/2024/10/10/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%9F%BA%E7%A1%80%E5%86%99%E6%B3%95/"/>
      <url>/2024/10/10/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%9F%BA%E7%A1%80%E5%86%99%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="https-www-fomal-cc-posts-4aa2d85f-html"><a href="#https-www-fomal-cc-posts-4aa2d85f-html" class="headerlink" title="https://www.fomal.cc/posts/4aa2d85f.html"></a><a href="https://www.fomal.cc/posts/4aa2d85f.html">https://www.fomal.cc/posts/4aa2d85f.html</a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客配置</title>
      <link href="/2024/10/10/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/10/10/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="https-www-fomal-cc-posts-3451f874-html"><a href="#https-www-fomal-cc-posts-3451f874-html" class="headerlink" title="https://www.fomal.cc/posts/3451f874.html"></a><a href="https://www.fomal.cc/posts/3451f874.html">https://www.fomal.cc/posts/3451f874.html</a></h2>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tarjan模板</title>
      <link href="/2024/10/10/Tarjan%E6%A8%A1%E6%9D%BF/"/>
      <url>/2024/10/10/Tarjan%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>有向图强连通分量，缩点</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tarjan 缩点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++timestamp;</span><br><span class="line">    stk.<span class="built_in">push</span>(u); in_stk[u] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y : g[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!dfn[y]) &#123;</span><br><span class="line">            <span class="built_in">tarjan</span>(y);</span><br><span class="line">            low[u] = <span class="built_in">min</span>(low[u], low[y]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(in_stk[y]) low[u] = <span class="built_in">min</span>(low[u], dfn[y]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (dfn[u] == low[u]) &#123;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">    ++scc_cnt;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">    y = stk.<span class="built_in">top</span>();</span><br><span class="line">    w[scc_cnt] += a[y];</span><br><span class="line">    stk.<span class="built_in">pop</span>();</span><br><span class="line">    in_stk[y] = <span class="number">0</span>;</span><br><span class="line">    id[y] = scc_cnt;</span><br><span class="line">&#125;<span class="keyword">while</span>(y != u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// tarjan 缩点后，重新建图</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j : g[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (id[i] != id[j]) &#123;</span><br><span class="line">gg[id[i]].<span class="built_in">push_back</span>(id[j]);</span><br><span class="line">in[id[j]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>割点</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfn[u] = low[u] = ++ timestamp;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j : g[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!dfn[j])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">tarjan</span>(j);</span><br><span class="line">            low[u] = <span class="built_in">min</span>(low[u], low[j]);</span><br><span class="line">            <span class="keyword">if</span> (low[j] &gt;= dfn[u]) &#123;</span><br><span class="line">                cnt ++;</span><br><span class="line">                <span class="keyword">if</span>(u != root || cnt &gt; <span class="number">1</span>) cut[u] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> low[u] = <span class="built_in">min</span>(low[u], dfn[j]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>割边</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> in_edge)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dfn[x] = low[x] = ++ timestamp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = head[x]; i; i = nt[i]) &#123;</span><br><span class="line"><span class="type">int</span> y = ver[i];</span><br><span class="line"><span class="keyword">if</span> (i == (in_edge ^ <span class="number">1</span>)) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (!dfn[y]) &#123;</span><br><span class="line">            <span class="built_in">tarjan</span>(y);</span><br><span class="line">            low[x] = <span class="built_in">min</span>(low[x], low[y]);</span><br><span class="line">            <span class="keyword">if</span> (low[y] &gt; dfn[x]) &#123;</span><br><span class="line">brige[i] = brige[i ^ <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> low[x] = <span class="built_in">min</span>(low[x], dfn[y]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>点双缩点</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++timestamp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line"><span class="keyword">if</span> (x == root &amp;&amp; head[x] == <span class="number">0</span>) &#123; <span class="comment">//孤立点</span></span><br><span class="line">dcc[++cnt].<span class="built_in">push_back</span>(x);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> y : ng[x]) &#123;</span><br><span class="line"><span class="keyword">if</span> (!dfn[y]) &#123;</span><br><span class="line"><span class="built_in">tarjan</span>(y);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[y]);</span><br><span class="line"><span class="keyword">if</span> (low[y] &gt;= dfn[x]) &#123;</span><br><span class="line">flag ++;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">if</span> (x != root || flag &gt; <span class="number">1</span>) cut[x] = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> z;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">z = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">dcc[cnt].<span class="built_in">push_back</span>(z);</span><br><span class="line">&#125;<span class="keyword">while</span>(z != y);</span><br><span class="line">dcc[cnt].<span class="built_in">push_back</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> low[x] = <span class="built_in">min</span>(low[x], dfn[y]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 缩点</span></span><br><span class="line">num = cnt;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line"><span class="keyword">if</span> (cut[i]) new_id[i] = ++num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= cnt; i++) </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; dcc[i].<span class="built_in">size</span>(); j++) &#123;</span><br><span class="line"><span class="type">int</span> x = dcc[i][j];</span><br><span class="line"><span class="keyword">if</span> (cut[x]) &#123;</span><br><span class="line"><span class="built_in">add_c</span>(i, new_id[x]);</span><br><span class="line"><span class="built_in">add_c</span>(new_id[x], i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>边双</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> to)</span> </span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++timestamp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = head[x]; i; i = nt[i]) &#123;</span><br><span class="line"><span class="type">int</span> y = ver[i];</span><br><span class="line"><span class="keyword">if</span> (i == (to ^ <span class="number">1</span>)) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (!dfn[y]) &#123;</span><br><span class="line"><span class="built_in">tarjan</span>(y, i);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[y], low[x]);</span><br><span class="line">&#125; <span class="keyword">else</span> low[x] = <span class="built_in">min</span>(low[x], dfn[y]);</span><br><span class="line"><span class="keyword">if</span> (low[y] &gt; dfn[x]) brige[i] = brige[i ^ <span class="number">1</span>] = <span class="number">1</span>, ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">id[x] = num;</span><br><span class="line">po[num].<span class="built_in">push_back</span>(x);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = head[x]; i; i = nt[i]) &#123;</span><br><span class="line"><span class="type">int</span> y = ver[i];</span><br><span class="line"><span class="keyword">if</span> (id[y]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (brige[i]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs</span>(y, x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>练习题</p><div class="table-container"><table><thead><tr><th><font size=6>题目</font></th><th><font size=6>类型</font></th></tr></thead><tbody><tr><td><a href="https://codeforces.com/contest/1986/problem/F">Non-academic Problem</a></td><td>割边板子题</td></tr><tr><td><a href="https://www.acwing.com/problem/content/366/">网络</a></td><td>边双</td></tr><tr><td><a href="https://www.luogu.com.cn/problem/P3388">【模板】割点（割顶）</a></td><td>割点模板</td></tr><tr><td><a href="https://www.luogu.com.cn/problem/P3469">BLO-Blockade</a></td><td>点双</td></tr><tr><td><a href="https://www.luogu.com.cn/problem/SP2878">Knights of the Round Table</a></td><td>点双</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tarjan </tag>
            
            <tag> 算法竞赛 </tag>
            
            <tag> 算法模板 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
